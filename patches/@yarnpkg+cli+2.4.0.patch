diff --git a/node_modules/@yarnpkg/cli/lib/tools/getDynamicLibs.js b/node_modules/@yarnpkg/cli/lib/tools/getDynamicLibs.js
index 9acfde1..173db4b 100644
--- a/node_modules/@yarnpkg/cli/lib/tools/getDynamicLibs.js
+++ b/node_modules/@yarnpkg/cli/lib/tools/getDynamicLibs.js
@@ -14,8 +14,17 @@ const DYNAMIC_LIBS = [
     `yup`,
 ];
 const getDynamicLibs = () => {
-    return new Map(DYNAMIC_LIBS.map(name => {
-        return [name, require(name)];
-    }));
+    return new Map([
+      [`@yarnpkg/cli`, require(`@yarnpkg/cli`)]
+      [`@yarnpkg/core`, require(`@yarnpkg/core`)]
+      [`@yarnpkg/fslib`, require(`@yarnpkg/fslib`)]
+      [`@yarnpkg/libzip`, require(`@yarnpkg/libzip`)]
+      [`@yarnpkg/parsers`, require(`@yarnpkg/parsers`)]
+      [`@yarnpkg/shell`, require(`@yarnpkg/shell`)]
+      // Those ones are always useful
+      [`clipanion`, require(`clipanion`)]
+      [`semver`, require(`semver`)]
+      [`yup`, require(`yup`)]
+    ]);
 };
 exports.getDynamicLibs = getDynamicLibs;
diff --git a/node_modules/@yarnpkg/cli/lib/tools/getPluginConfiguration.js b/node_modules/@yarnpkg/cli/lib/tools/getPluginConfiguration.js
index a2f6ba3..cb09a2e 100644
--- a/node_modules/@yarnpkg/cli/lib/tools/getPluginConfiguration.js
+++ b/node_modules/@yarnpkg/cli/lib/tools/getPluginConfiguration.js
@@ -4,12 +4,13 @@ exports.getPluginConfiguration = void 0;
 const tslib_1 = require("tslib");
 // @ts-expect-error
 const package_json_1 = tslib_1.__importDefault(require("@yarnpkg/cli/package.json"));
-const getDynamicLibs_1 = require("./getDynamicLibs");
+// const getDynamicLibs_1 = require("./getDynamicLibs");
 function getPluginConfiguration() {
     const plugins = new Set();
     for (const dependencyName of package_json_1.default[`@yarnpkg/builder`].bundles.standard)
         plugins.add(dependencyName);
-    const modules = getDynamicLibs_1.getDynamicLibs();
+    // const modules = getDynamicLibs_1.getDynamicLibs();
+    const modules = new Map()
     for (const plugin of plugins)
         modules.set(plugin, require(plugin).default);
     return { plugins, modules };
