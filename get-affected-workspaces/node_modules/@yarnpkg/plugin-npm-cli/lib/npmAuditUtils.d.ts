import { DescriptorHash, Project, Workspace, treeUtils, Descriptor } from '@yarnpkg/core';
import * as npmAuditTypes from './npmAuditTypes';
export declare const allSeverities: npmAuditTypes.Severity[];
export declare function getTransitiveDevDependencies(project: Project, workspace: Workspace, { all }: {
    all: boolean;
}): Set<DescriptorHash>;
export declare function transformDescriptorIterableToRequiresObject(descriptors: Iterable<Descriptor>): {
    [key: string]: string;
};
export declare function getSeverityInclusions(severity?: npmAuditTypes.Severity): Set<npmAuditTypes.Severity>;
export declare function filterVulnerabilities(vulnerabilities: npmAuditTypes.AuditVulnerabilities, severity?: npmAuditTypes.Severity): Partial<npmAuditTypes.AuditVulnerabilities>;
export declare function isError(vulnerabilities: npmAuditTypes.AuditVulnerabilities, severity?: npmAuditTypes.Severity): boolean;
export declare function getReportTree(result: npmAuditTypes.AuditResponse, severity?: npmAuditTypes.Severity): treeUtils.TreeNode;
export declare function getRequires(project: Project, workspace: Workspace, { all, environment }: {
    all: boolean;
    environment: npmAuditTypes.Environment;
}): {
    [key: string]: string;
};
export declare function getDependencies(project: Project, workspace: Workspace, { all }: {
    all: boolean;
}): {
    [key: string]: {
        version: string;
        integrity: string;
        requires: {
            [key: string]: string;
        };
        dev: boolean;
    };
};
