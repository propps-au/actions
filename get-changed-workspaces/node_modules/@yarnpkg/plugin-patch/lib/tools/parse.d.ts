import { PortablePath } from '@yarnpkg/fslib';
export declare type HunkHeader = {
    original: {
        start: number;
        length: number;
    };
    patched: {
        start: number;
        length: number;
    };
};
export declare function getPath(p: string): PortablePath;
export declare function parseHunkHeaderLine(headerLine: string): HunkHeader;
export declare const NON_EXECUTABLE_FILE_MODE = 420;
export declare const EXECUTABLE_FILE_MODE = 493;
declare type FileMode = typeof NON_EXECUTABLE_FILE_MODE | typeof EXECUTABLE_FILE_MODE;
export declare enum PatchMutationType {
    Context = "context",
    Insertion = "insertion",
    Deletion = "deletion"
}
export declare type PatchMutationPart = {
    type: PatchMutationType;
    lines: Array<string>;
    noNewlineAtEndOfFile: boolean;
};
declare type FileRename = {
    type: `rename`;
    semverExclusivity: string | null;
    fromPath: PortablePath;
    toPath: PortablePath;
};
declare type FileModeChange = {
    type: `mode change`;
    semverExclusivity: string | null;
    path: PortablePath;
    oldMode: FileMode;
    newMode: FileMode;
};
export declare type FilePatch = {
    type: `patch`;
    semverExclusivity: string | null;
    path: PortablePath;
    hunks: Array<Hunk>;
    beforeHash: string | null;
    afterHash: string | null;
};
declare type FileDeletion = {
    type: `file deletion`;
    semverExclusivity: string | null;
    path: PortablePath;
    mode: FileMode;
    hunk: Hunk | null;
    hash: string | null;
};
declare type FileCreation = {
    type: `file creation`;
    semverExclusivity: string | null;
    mode: FileMode;
    path: PortablePath;
    hunk: Hunk | null;
    hash: string | null;
};
export declare type PatchFilePart = FilePatch | FileDeletion | FileCreation | FileRename | FileModeChange;
export declare type ParsedPatchFile = Array<PatchFilePart>;
declare type FileDeets = {
    semverExclusivity: string | null;
    diffLineFromPath: string | null;
    diffLineToPath: string | null;
    oldMode: string | null;
    newMode: string | null;
    deletedFileMode: string | null;
    newFileMode: string | null;
    renameFrom: string | null;
    renameTo: string | null;
    beforeHash: string | null;
    afterHash: string | null;
    fromPath: string | null;
    toPath: string | null;
    hunks: Array<Hunk> | null;
};
export declare type Hunk = {
    header: HunkHeader;
    parts: Array<PatchMutationPart>;
};
export declare function interpretParsedPatchFile(files: Array<FileDeets>): ParsedPatchFile;
export declare function parsePatchFile(file: string): ParsedPatchFile;
export declare function verifyHunkIntegrity(hunk: Hunk): void;
export {};
